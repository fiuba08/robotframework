*** Settings ***
Documentation     Test cases for failing suite setup and teardown. Some related tests are also found from test_suite_dir_with_suite_file.html
Force Tags        regression    jybot    pybot
Resource          atest_resource.txt

*** Variables ***
${1_pass_msg}     1 critical test, 1 passed, 0 failed\n 1 test total, 1 passed, 0 failed
${1_fail_msg}     \n\n1 critical test, 0 passed, 1 failed\n 1 test total, 0 passed, 1 failed
${2_fail_msg}     \n\n2 critical tests, 0 passed, 2 failed\n 2 tests total, 0 passed, 2 failed
${4_fail_msg}     \n\n4 critical tests, 0 passed, 4 failed\n 4 tests total, 0 passed, 4 failed
${5_fail_msg}     \n\n5 critical tests, 0 passed, 5 failed\n 5 tests total, 0 passed, 5 failed
${12_fail_msg}    \n\n12 critical tests, 0 passed, 12 failed\n 12 tests total, 0 passed, 12 failed
${also}           \n\nAlso teardown of the parent suite failed.
${teardown_file}    %{TEMPDIR}/robot-suite-teardown-executed.txt

*** Test Cases ***
Passing Suite Setup
    Run Tests    ${EMPTY}    core/passing_suite_setup.html
    Check Suite Status    ${SUITE}    PASS    ${1_pass_msg}
    ...    Verify Suite Setup

Passing Suite Teardown
    [Setup]    Remove File    ${teardown_file}
    Run Tests    ${EMPTY}    core/passing_suite_teardown.txt
    Check Suite Status    ${SUITE}    PASS    ${1_pass_msg}
    ...   Test
    File Should Exist    ${teardown_file}
    [Teardown]    Remove File    ${teardown_file}

Passing Suite Setup And Teardown
    [Setup]    Remove File    ${teardown_file}
    Run Tests    ${EMPTY}    core/passing_suite_setup_and_teardown.txt
    Check Suite Status    ${SUITE}    PASS    ${1_pass_msg}
    ...    Verify Suite Setup
    File Should Exist    ${teardown_file}
    [Teardown]    Remove File    ${teardown_file}

Failing Suite Setup
    [Documentation]    Checks that tests in the suite are found from it and marked failed. Also checks that suite teardown is executed.
    Run Tests    ${EMPTY}    core/failing_suite_setup.txt
    Check Suite Status    ${SUITE}    FAIL    Suite setup failed:\nExpected failure${2_fail_msg}
    ...    Test 1    Test 2
    Should Be Equal    ${SUITE.setup.status}    FAIL
    Should Be Equal    ${SUITE.teardown.status}    PASS
    Length Should Be    ${SUITE.teardown.msgs}    1
    Check Log Message    ${SUITE.teardown.messages[0]}    Suite teardown executed
    Should Be Empty    ${SUITE.teardown.kws}

Erroring Suite Setup
    [Documentation]    Checks that tests in the suite are found from it and marked failed. Also checks that suite teardown is executed.
    Run Tests    ${EMPTY}    core/erroring_suite_setup.txt
    Check Suite Status    ${SUITE}    FAIL    Suite setup failed:\nNo keyword with name 'Non-Existing Keyword' found.${2_fail_msg}
    ...    Test 1    Test 2
    Should Be Equal    ${SUITE.setup.status}    FAIL
    ${td} =    Set Variable    ${SUITE.teardown}
    Should Be Equal    ${td.name}    My TD
    Should Be Equal    ${td.status}    PASS
    Should Be Empty    ${td.msgs}
    Length Should Be    ${td.kws}    2
    Length Should Be    ${td.kws[0].msgs}    1
    Check Log Message    ${td.kws[0].msgs[0]}    Hello from suite teardown!
    Should Be Empty    ${td.kws[0].kws}
    Should Be Equal    ${td.kws[1].name}    BuiltIn.No Operation

Failing Suite Teardown When All Tests Pass
    Run Tests    ${EMPTY}    core/failing_suite_teardown.html
    Check Suite Status    ${SUITE}    FAIL    Suite teardown failed:\nExpected failure${2_fail_msg}
    ...    Test 1    Test 2
    Should Be Equal    ${SUITE.teardown.status}    FAIL

Failing Suite Teardown When Also Tests Fail
    Run Tests    ${EMPTY}    core/failing_suite_teardown_2.html
    Check Suite Status    ${SUITE}    FAIL    Suite teardown failed:\nExpected failure${5_fail_msg}
    ...    Test Passes    Test Fails    Setup Fails    Teardown Fails    Test and Teardown Fail
    Should Be Equal    ${SUITE.teardown.status}    FAIL

Erroring Suite Teardown
    Run Tests    ${EMPTY}    core/erroring_suite_teardown.html
    Check Suite Status    ${SUITE}    FAIL    Suite teardown failed:\nNo keyword with name 'Non-Existing Keyword' found.${2_fail_msg}
    ...    Test 1    Test 2
    Should Be Equal    ${SUITE.teardown.status}    FAIL

Failing Suite Setup And Teardown
    Run Tests    ${EMPTY}     core/failing_suite_setup_and_teardown.txt
    Check Suite Status    ${SUITE}    FAIL    Suite setup failed:\n Setup failure\n\n Also suite teardown failed:\n Teardown failure${2_fail_msg}
    ...    Test 1    Test 2
    Should Be Equal    ${SUITE.setup.status}    FAIL
    Should Be Equal    ${SUITE.teardown.status}    FAIL

Failing Higher Level Suite Teardown
    Run Tests    ${EMPTY}    core/failing_suite_teardown_dir
    Check Suite Status    ${SUITE}    FAIL    Suite teardown failed:\nFailure in top level suite teardown${12_fail_msg}
    ...    PTD Passing    PTD Failing    FTD Passing    FTD Failing    PTD PTD Passing
    ...    PTD PTD Failing    PTD FTD Passing    PTD FTD Failing    FTD PTD Passing    FTD PTD Failing    FTD FTD Passing
    ...    FTD FTD Failing
    Check Suite Status    Passing Teardown Dir    FAIL    Teardown of the parent suite failed.${4_fail_msg}
    ...    PTD PTD Passing    PTD PTD Failing    PTD FTD Passing    PTD FTD Failing
    Check Suite Status    Ptd Passing Teardown    FAIL    Teardown of the parent suite failed.${2_fail_msg}
    ...    PTD PTD Passing    PTD PTD Failing
    Check Suite Status    Ptd Failing Teardown    FAIL    Suite teardown failed:\nFailure in suite teardown${also}${2_fail_msg}
    ...    PTD FTD Passing    PTD FTD Failing
    Check Suite Status    Failing Teardown Dir    FAIL    Suite teardown failed:\nFailure in sub suite teardown${also}${4_fail_msg}
    ...    FTD PTD Passing    FTD PTD Failing    FTD FTD Passing    FTD FTD Failing
    Check Suite Status    Ftd Passing Teardown    FAIL    Teardown of the parent suite failed.${also}${2_fail_msg}
    ...    FTD PTD Passing    FTD PTD Failing
    Check Suite Status    Ftd Failing Teardown    FAIL    Suite teardown failed:\nFailure in suite teardown${also}${also}${2_fail_msg}
    ...    FTD FTD Passing    FTD FTD Failing

Failing Higher Level Suite Setup
    Run Tests    ${EMPTY}    core/failing_higher_level_suite_setup
    Check Suite Status    ${SUITE}    FAIL    Suite setup failed:\nExpected failure in higher level setup${2_fail_msg}
    ...    Test 1    Test 2
    Check Suite Status    ${SUITE.suites[0]}    FAIL    Setup of the parent suite failed:\nExpected failure in higher level setup${1_fail_msg}
    ...    Test 1
    Check Suite Status    ${SUITE.suites[1]}    FAIL    Setup of the parent suite failed:\nExpected failure in higher level setup${1_fail_msg}
    ...    Test 2

*** Keywords ***
Check Suite Status
    [Arguments]    ${suite or name}    ${status}    ${message}    @{tests}
    ${is string} =    Run Keyword And Return Status    Should Be String    ${suite or name}
    ${suite} =    Run Keyword If    ${is string}    Get Test Suite    ${suite or name}
    ...    ELSE    Set Variable    ${suite or name}
    Should Be Equal    ${suite.status}    ${status}    Wrong suite status
    Should Be Equal    ${suite.full_message}    ${message}    Wrong suite message
    Check Suite Contains Tests    ${suite}    @{tests}
