*** Settings ***
Library  KwargsLibrary.py
Library  helper.py
Library  python_library.py

*** Test Cases ***
Simple Named
    ${ret}=  One Named  named=bar
    Should Be Equal  ${ret}  bar
    ${ret}=  Two Named  fst=bar  snd=quux
    Should Be Equal  ${ret}  bar, quux
    ${ret}=  Two Named  snd=quux  fst=bar
    Should Be Equal  ${ret}  bar, quux

Mandatory And Named As Positional
    ${ret}=  Mandatory And Named  a  b  c
    Should Be Equal  ${ret}  a, b, c

Mandatory And Named As Named
    ${ret}=  Mandatory And Named  a=1  b=2  c=3
    Should Be Equal  ${ret}  1, 2, 3
    ${ret}=  Mandatory And Named  c=3  a=1  b=2
    Should Be Equal  ${ret}  1, 2, 3

Mandatory, Named And Varargs As Positional
    ${ret}=  Mandatory Named And Varargs  mandatory  d1  d2\=d2
    Should Be Equal  ${ret}  mandatory, d1, d2=d2, []
    ${ret}=  Mandatory Named And Varargs  1  2  3  4  5  6
    Should Be Equal  ${ret}  1, 2, 3, [4, 5, 6]

Naming arguments with varargs is supported when varargs are not used
    ${ret}=  Mandatory Named And Varargs  mandatory  d1  d2=d2
    Should Be Equal  ${ret}  mandatory, d1, d2, []

Naming arguments is not supported when varargs are used
    [documentation]  FAIL  Keyword 'KwargsLibrary.Mandatory Named And Varargs' got positional argument after named arguments.
    Mandatory Named And Varargs  d1  d2=d2  vararg

Naming arguments before possible varargs is not supported with empty lists either
    [documentation]  FAIL  Keyword 'KwargsLibrary.Mandatory Named And Varargs' got positional argument after named arguments.
    Mandatory Named And Varargs  d1  d2=d2  @{EMPTY}

Named Syntax In Variable Is Ignored
    ${assignment}=  Set Variable  named=value
    ${ret}=  One Named  ${assignment}
    Should Be Equal  ${ret}  named=value

Non-string named value
    ${ret}=  One Named  named=${42}
    Should Be Equal  ${ret}  ${42}

Equals Sign In Named Value
    ${ret}=  One Named  named=bar=quux
    Should Be Equal  ${ret}  bar=quux
    ${ret}=  One Named  named===value
    Should Be Equal  ${ret}  ==value

Non-existing argument does not trigger named usage
    ${ret}=  One Named  notnamed=value
    Should Be Equal  ${ret}  notnamed=value
    ${ret}=  One Named  ä=ö
    Should Be Equal  ${ret}  ä=ö

Escaping named
    ${ret}=  One Named  named=bar\=quux
    Should Be Equal  ${ret}  bar=quux
    ${ret}=  One Named  named\=bar=quux
    Should Be Equal  ${ret}  named=bar=quux
    ${ret}=  One Named  named\=bar
    Should Be Equal  ${ret}  named=bar

Naming twice
    [documentation]  FAIL  Keyword 'KwargsLibrary.Two Named' got multiple values for argument 'fst'.
    ${ret}=  Two Named  fst=foo  fst=foo

With Run Keyword
    Run Keyword  name=No Operation
    Run Keyword If    name=Fail    condition=1 < 0

Inside Run Keyword
    ${ret}=    Run Keyword  Four Named    foo    d=quux    b=kääx
    Should Be Equal    ${ret}    foo, kääx, None, quux

Named combinations with varargs
    [template]           Execute working named vararg combination with result
    a, default           a
    a, default           a=a
    a, b                 a=a   b=b
    a, b                 b=b   a=a
    c=c, d=d             c=c   d=d
    a, b                 a     b
    a, b                 a     b=b
    a, b, c              a     b      c
    a, b, c=c            a     b      c=c

Non working named combinations with varargs
    [template]           Execute illegal named vararg combination
    Keyword 'python_library.Lib Mandatory Named And Varargs' got positional argument after named arguments.   a=a  b
    Keyword 'python_library.Lib Mandatory Named And Varargs' missing value for argument 'a'.                  b=b
    Keyword 'python_library.Lib Mandatory Named And Varargs' got positional argument after named arguments.   b=b  b
    Keyword 'python_library.Lib Mandatory Named And Varargs' got positional argument after named arguments.   a    b=b   c
    Keyword 'python_library.Lib Mandatory Named And Varargs' got multiple values for argument 'a'.            a    b     a=a
    Keyword 'python_library.Lib Mandatory Named And Varargs' got multiple values for argument 'b'.            a    b     b=b
    Keyword 'python_library.Lib Mandatory Named And Varargs' got multiple values for argument 'a'.            a    a=a
    Keyword 'python_library.Lib Mandatory Named And Varargs' got multiple values for argument 'a'.            a    b     c    a=a

Named combinations without varargs
    [template]           Execute working named combination with result
    a, default           a
    a, default           a=a
    a, b                 a=a   b=b
    a, b                 b=b   a=a
    a, b                 a     b
    a, b                 a     b=b

Non working named combinations without varargs
    [template]           Execute illegal named combination
    Keyword 'python_library.Lib Mandatory And Named' got positional argument after named arguments.    a=a   b
    Keyword 'python_library.Lib Mandatory And Named' missing value for argument 'a'.                   b=b
    Keyword 'python_library.Lib Mandatory And Named' got positional argument after named arguments.    b=b  b
    Keyword 'python_library.Lib Mandatory And Named' got multiple values for argument 'a'.             a    a=a

Working combinations with all argument types
   [template]            Execute working combinations with everything
   a, default                   a
   a, default                   a=a
   a, b                         a       b
   a, b                         a       b=b
   a, default, d1:d1            a       d1=d1
   a, b                         a=a     b=b
   a, default, d1:d1            a=a     d1=d1
   a, b, c1                     a       b       c1
   a, b, c1, d1:d1              a       b       c1      d1=d1
   a, default, d1:d1, d2:d2     a       d1=d1   d2=d2

Illegal combinations with all argument types
   [template]            Execute illegal combinations with everything
   Keyword 'python_library.Lib Mandatory Named Varargs And Kwargs' missing value for argument 'a'.                   d1=d
   Keyword 'python_library.Lib Mandatory Named Varargs And Kwargs' got multiple values for argument 'a'.             a     a=a
   Keyword 'python_library.Lib Mandatory Named Varargs And Kwargs' got multiple values for argument 'a'.             a=a   a=a
   Keyword 'python_library.Lib Mandatory Named Varargs And Kwargs' got positional argument after named arguments.    a=a   b
   Keyword 'python_library.Lib Mandatory Named Varargs And Kwargs' got multiple values for argument 'b'.             a     b     b=b
   Keyword 'python_library.Lib Mandatory Named Varargs And Kwargs' got multiple values for argument 'a'.             a     b     a=a
   Keyword 'python_library.Lib Mandatory Named Varargs And Kwargs' got multiple values for argument 'a'.             a     b     c1      a=a
   Keyword 'python_library.Lib Mandatory Named Varargs And Kwargs' got positional argument after named arguments.    a=a   b=b   d1=d    foo
   Keyword 'python_library.Lib Mandatory Named Varargs And Kwargs' got multiple values for argument 'b'.             a     b=b   b=b
   Keyword 'python_library.Lib Mandatory Named Varargs And Kwargs' got multiple values for argument 'a'.             a=a   d1=d  d2=d    a=a

List variable with multiple values for same variable
    [Documentation]    FAIL Keyword 'python_library.Lib Mandatory And Named 2' got multiple values for argument 'b'.
    @{foo} =     Create list   a    b
    Lib mandatory and named 2    @{foo}    b=given second time

*** Keywords ***
Execute working combinations with everything
    [arguments]    ${expected}  @{args}
    ${res} =       Get result or error    Lib Mandatory Named varargs and kwargs   @{args}
    Should be equal     ${expected}   ${res}

Execute illegal combinations with everything
    [arguments]    ${expected error}   @{args}
    ${res} =       Get result or error    Lib Mandatory Named varargs and kwargs   @{args}
    Should be equal     ${res}     ${expected error}

Execute working named vararg combination with result
    [arguments]    ${expected}  @{args}
    ${res} =       Get result or error    Lib Mandatory Named and varargs   @{args}
    Should be equal     ${expected}   ${res}

Execute illegal named vararg combination
    [arguments]    ${expected error}   @{args}
    ${res} =       Get result or error    Lib Mandatory Named and varargs   @{args}
    Should be equal     ${res}     ${expected error}

Execute working named combination with result
    [arguments]    ${expected}  @{args}
    ${res} =       Get result or error    Lib Mandatory and Named   @{args}
    Should be equal     ${expected}   ${res}

Execute illegal named combination
    [arguments]     ${expected error}     @{args}
    ${res} =       Get result or error    Lib Mandatory and Named   @{args}
    Should be equal     ${res}     ${expected error}
