*** Test Cases ***
Simple Kwarg
    ${ret}=  One Kwarg  kwarg=quux
    Should Be Equal  ${ret}  quux
    ${ret}=  Two Kwargs  first=foo  second=bar
    Should Be Equal  ${ret}  foo, bar
    ${ret}=  Two Kw Args  second=World!  first=Hello
    Should Be Equal  ${ret}  Hello, World!

Substitution Starts From The End
    ${ret}=  Four Kwargs  a=foo  bar  d=quux
    Should Be Equal  ${ret}  a=foo, bar, default, quux

Kwarg Syntax In Variable Is Ignored
    ${assignment}=  Set Variable  kwarg=value
    ${ret}=  One Kwarg  ${assignment}
    Should Be Equal  ${ret}  kwarg=value

Non-string value in UK kwarg
    ${ret}=  One Kwarg  kwarg=${42}
    Should Be Equal  ${ret}  ${42}

Equals Sign In Kwarg Value
    ${ret}=  One Kwarg  kwarg=bar=quux
    Should Be Equal  ${ret}  bar=quux

Using non-existing kwarg
    ${ret}=  One Kwarg  notkwarg=some value
    Should Be Equal  ${ret}  notkwarg=some value

Escaping Kwarg
    ${ret}=  One Kwarg  kwarg=bar\\=quux
    Should Be Equal  ${ret}  bar\\=quux
    ${ret}=  One Kwarg  kwarg\\=bar=quux
    Should Be Equal  ${ret}  kwarg\\=bar=quux
    ${ret}=  One Kwarg  kwarg\=bar

Mandatory Args Should Be Positioned
    ${ret}=  Mandatory And Kwargs  a  b  c
    Should Be Equal  ${ret}  a, b, c
    ${ret}=  Mandatory And Kwargs   a  c=b
    Should Be Equal  ${ret}  a, c=b, KWARG VALUE

Inside Run Kw
    ${ret}=  Run Keyword  Four Kwargs  a=foo  bar  d=quux
    Should Be Equal  ${ret}  a=foo, bar, default, quux

Default value with escaped content
    ${ret}=  Escaped default value  d4=\${nv}
    Should Be Equal  ${ret}  \${notvariable} \\\\ \n${SPACE}\${nv}

Same Argument Specified Twice
    ${ret}=  Two Kwargs  bar  first=foo
    Should Be Equal  ${ret}  bar, first=foo
    ${ret}=  Two Kwargs  second=foo  bar
    Should Be Equal  ${ret}  second=foo, bar

Varargs without naming arguments works
    @{ret} =    Named arguments with varargs   foo    bar   dar
    Should be equal   @{ret}[0]    foo
    @{ret} =    Named arguments with varargs   foo    bar=bar   dar
    Should be equal   @{ret}[1]    bar=bar
    @{ret} =    Named arguments with varargs   foo    b\=bar   dar
    Should be equal   @{ret}[1]    b=bar

Naming without the varargs works
    @{ret} =    Named arguments with varargs   foo    b=bar
    Should be equal   @{ret}[1]    bar

Varargs with naming does not work
    [documentation]  FAIL  Naming arguments before varargs is not supported. Please remove prefix b= or escape b=bar as b\\=bar.
    @{ret} =    Named arguments with varargs   foo    b=bar    dar

Varargs with naming does not work with empty lists either
    [documentation]  FAIL  Naming arguments before varargs is not supported. Please remove prefix b= or escape b=bar as b\\=bar.
    @{ret} =    Named arguments with varargs   foo    b=bar    @{EMPTY}

*** Keywords ***
One Kwarg
    [arguments]  ${kwarg}=
    [return]  ${kwarg}

Two Kwargs
    [arguments]  ${first}=  ${second}=
    [return]  ${first}, ${second}

Four Kw Args
    [arguments]  ${a}=default  ${b}=default  ${c}=default  ${d}=default
    [return]  ${a}, ${b}, ${c}, ${d}

Mandatory And Kwargs
    [arguments]  ${man1}  ${man2}  ${kwarg}=KWARG VALUE
    [return]  ${man1}, ${man2}, ${kwarg}

Escaped default value
    [arguments]  ${d1}=\${notvariable}  ${d2}=\\\\  ${d3}=\n  ${d4}=\t
    [return]  ${d1} ${d2} ${d3} ${d4}

Named arguments with varargs
    [arguments]  ${a}=default  ${b}=default   @{varargs}
    [return]     ${a}     ${b}    @{varargs}