*** Settings ***
Suite Setup       Check Preconditions
Library           Process.py
Library           OperatingSystem
Resource          resource.txt

*** Test Cases ***
Run process does not change active process
    Some process    active
    ${expected id}=    Get Process Id
    Run Python Process    1+1
    ${id}=    Get Process Id
    Should Be Equal    ${expected id}    ${id}

Killing process
    ${handle}=    Some process
    ${is_alive}=    Process Is Running    ${handle}
    Should Be True    ${is_alive}
    Terminate Process    ${handle}    kill=${True}
    Wait For Process    ${handle}
    Process Should Be Stopped    ${handle}

Terminating process
    ${handle}=    Some process
    Terminate Process    ${handle}
    Wait For Process    ${handle}
    Process Should Be Stopped    ${handle}

Pid
    ${handle}=    Some process
    ${pid}=    Get Process Id    ${handle}
    Should Not Be Equal   ${pid}   ${None}
    Evaluate    os.kill(int(${pid}),signal.SIGTERM) if hasattr(os, 'kill') else os.system('taskkill /pid ${pid} /f')    os,signal
    Wait For Process    ${handle}
    Process Should Be Stopped    ${handle}

Starting many processes and killing all
    ${handle1}=    Some process
    ${handle2}=    Some process
    ${handle3}=    Some process
    ${handle4}=    Some process
    ${handle5}=    Some process
    Sleep    0.1
    Process Should Be Running    ${handle1}
    Process Should Be Running    ${handle2}
    Process Should Be Running    ${handle3}
    Process Should Be Running    ${handle4}
    Process Should Be Running    ${handle5}
    Terminate All Processes
    Sleep    0.1
    Process Should Be Stopped    ${handle1}
    Process Should Be Stopped    ${handle2}
    Process Should Be Stopped    ${handle3}
    Process Should Be Stopped    ${handle4}
    Process Should Be Stopped    ${handle5}

Kill Process Which Does Not Exist
    ${handle}=    Some process
    Terminate Process    ${handle}    kill=${True}
    Terminate Process    ${handle}    kill=${True}

Wait For Process Which Does Not Exist
    ${handle}=    Some process
    Terminate Process    ${handle}    kill=${True}
    Wait For Process    ${handle}

Lot of output
    [Tags]    performance
    ${handle}=    Run Process    python -vc "for i in range(350000): \tprint 'a'*400"    shell=True    stdout=${TEMPDIR}${/}myout.txt
    File Should Not Be Empty    ${TEMPDIR}${/}myout.txt
    [Teardown]    Remove File    ${TEMPDIR}${/}myout.txt

Getting PIDs in different ways should give same result
    ${handle}=    Start Process    python -c "print 'hello'"    shell=True    alias=hello
    ${pid1}=      Get Process Id
    ${pid2}=      Get Process Id   hello
    ${pid3}=      Get Process Id   ${handle}
    Should Be Equal As Integers   ${pid1}   ${pid2}
    Should Be Equal As Integers   ${pid1}   ${pid3}


*** Keywords ***
Check Preconditions
    ${is_ok}=   Evaluate   sys.version_info >= (2,6) and sys.platform != 'cli'   sys
    Run Keyword If  not ${is_ok}    Set Suite Metadata  info   precondition_fail
    Run Keyword If  not ${is_ok}    Fail

