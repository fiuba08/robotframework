*** Settings ***
Documentation    Testing how ElementTree handles namespaces by default
Resource         resource.txt
Test Teardown    Remove File    ${OUTPUT}

*** Test Cases ***
Tag names contain namespace in Clark Notation
    ${root} =    Parse XML    ${NS}
    Should Be Equal    ${root.tag}    {default}test
    ${children} =    Get Child Elements    ${root}
    Should Be Equal    ${children[0].tag}    {default}child
    Should Be Equal    ${children[1].tag}    {http://uri}child
    Should Be Equal    ${children[2].tag}    {whatever.xsd}child
    Should Be Equal    ${children[3].tag}    {default2}another
    Should Be Equal    ${children[4].tag}    {default}back

Clarck Notation must be used in xpaths
    [Template]    Element Text Should Be
    ${NS}    default ns        xpath={default}child
    ${NS}    ns with prefix    xpath={http://uri}child
    ${NS}    2nd prefix        xpath={whatever.xsd}child
    ${NS}    2nd default       xpath={default2}another/{default2}child

xmlns attributes are removed
    [Template]    Element Should Have Attributes
    ${NS}    .    name    root
    ${NS}    {default}child    id    1
    ${NS}    {http://uri}child
    ${NS}    {whatever.xsd}child
    ${NS}    {default2}another/{default2}child
    ${NS}    {default}back

Saved XML is semantically correct
    ${root} =    Parse XML    ${NS}
    Save XML    ${root}    ${OUTPUT}
    Elements Should Be Equal    ${root}    ${OUTPUT}

Prefixes are mangled when XML is saved
    ${root} =    Parse XML    ${NS}
    Save XML    ${root}    ${OUTPUT}
    ${content} =    Get File    ${OUTPUT}
    ${expected} =    Catenate    SEPARATOR=\n
    ...    <?xml version='1.0' encoding='UTF-8'?>
    ...    <ns0:test name="root" xmlns:ns0="default">
    ...    ${SPACE*4}<ns0:child id="1">default ns</ns0:child>
    ...    ${SPACE*4}<ns1:child xmlns:ns1="http://uri">ns with prefix</ns1:child>
    ...    ${SPACE*4}<ns1:child xmlns:ns1="whatever.xsd">2nd prefix</ns1:child>
    ...    ${SPACE*4}<ns1:another xmlns:ns1="default2">
    ...    ${SPACE*8}<ns1:child>2nd default</ns1:child>
    ...    ${SPACE*4}</ns1:another>
    ...    ${SPACE*4}<ns0:back>back in default</ns0:back>
    ...    </ns0:test>
    Should Be Equal    ${content}    ${expected}
